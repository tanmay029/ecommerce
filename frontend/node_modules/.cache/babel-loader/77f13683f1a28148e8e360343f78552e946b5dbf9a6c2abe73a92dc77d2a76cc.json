{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage,\n  paymentMethod: 'Razorpay'\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product && x.size === item.size);\n      if (existItem) {\n        state.cartItems = state.cartItems.map(x => x.product === existItem.product && x.size === existItem.size ? item : x);\n      } else {\n        state.cartItems = [...state.cartItems, item];\n      }\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    removeFromCart: (state, action) => {\n      const {\n        productId,\n        size\n      } = action.payload;\n      state.cartItems = state.cartItems.filter(x => !(x.product === productId && x.size === size));\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    updateCartQuantity: (state, action) => {\n      const {\n        productId,\n        size,\n        qty\n      } = action.payload;\n      const item = state.cartItems.find(x => x.product === productId && x.size === size);\n      if (item) {\n        item.qty = qty;\n        localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n      }\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n      localStorage.setItem('shippingAddress', JSON.stringify(action.payload));\n    },\n    savePaymentMethod: (state, action) => {\n      state.paymentMethod = action.payload;\n    },\n    clearCartItems: state => {\n      state.cartItems = [];\n      localStorage.removeItem('cartItems');\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateCartQuantity,\n  saveShippingAddress,\n  savePaymentMethod,\n  clearCartItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartItemsFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","initialState","cartItems","shippingAddress","paymentMethod","cartSlice","name","reducers","addToCart","state","action","item","payload","existItem","find","x","product","size","map","setItem","stringify","removeFromCart","productId","filter","updateCartQuantity","qty","saveShippingAddress","savePaymentMethod","clearCartItems","removeItem","actions","reducer"],"sources":["/Users/tanmaykumar/Downloads/ad17e938/frontend/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst initialState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage,\n  paymentMethod: 'Razorpay',\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existItem = state.cartItems.find(\n        (x) => x.product === item.product && x.size === item.size\n      );\n\n      if (existItem) {\n        state.cartItems = state.cartItems.map((x) =>\n          x.product === existItem.product && x.size === existItem.size\n            ? item\n            : x\n        );\n      } else {\n        state.cartItems = [...state.cartItems, item];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    removeFromCart: (state, action) => {\n      const { productId, size } = action.payload;\n      state.cartItems = state.cartItems.filter(\n        (x) => !(x.product === productId && x.size === size)\n      );\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    updateCartQuantity: (state, action) => {\n      const { productId, size, qty } = action.payload;\n      const item = state.cartItems.find(\n        (x) => x.product === productId && x.size === size\n      );\n      if (item) {\n        item.qty = qty;\n        localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n      }\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n      localStorage.setItem('shippingAddress', JSON.stringify(action.payload));\n    },\n    savePaymentMethod: (state, action) => {\n      state.paymentMethod = action.payload;\n    },\n    clearCartItems: (state) => {\n      state.cartItems = [];\n      localStorage.removeItem('cartItems');\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateCartQuantity,\n  saveShippingAddress,\n  savePaymentMethod,\n  clearCartItems,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}